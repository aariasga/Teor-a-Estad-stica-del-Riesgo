##########################CARTERA C2##############################3

install.packages("orthopolynom")
install.packages("gtools")
library(orthopolynom)
library(gtools)
### Numero de siniestros
k<-c(0:6)
n_k<-c(20592,2651,297,41,7,0,1)
Tcasos<-sum(n_k)
freqrel<-(n_k/Tcasos)
eps=0.000001;
n_bar <- sum(k*n_k)/Tcasos
sum(k*n_k)
(sum(k^2*n_k)/Tcasos)
(n_bar^2)
s_cua <- (sum(k^2*n_k)/Tcasos)-(n_bar^2)
n_bar;s_cua

### Prueba Chicuadrado
Chi_cua<- function(obs, esp,alpha=0.05,m=8,gl=2){
  chi<-sum((obs-esp)^2/esp)
  vchi<-qchisq(1-alpha,df = gl )
  if(chi<vchi){
    return(list("No hay evidencia para rechazar H_0",
                chi,"Valor critico"=vchi))
  }
  if(chi>=vchi){
    return(list("Existe evidencia para rechazar H_0",
                chi, "Valor critico"=vchi))
  }
}
### intervalo de confianza para el índice de dispersión
d <- s_cua/n_bar #índice de dispersión muestral

d
z <- qnorm(0.975, mean = 0, sd = 1)
z
der <- d + z * d * sqrt((1 / Tcasos) * (2 + ((d - 1) * (3 * d - 1)) / s_cua))
izq <- d - z * d * sqrt((1 / Tcasos) * (2 + ((d - 1) * (3 * d - 1)) / s_cua))

izq;der

# Estimación de parámetros

# Distribucion Poisson
lambda<-n_bar
lambda

# Binomial Negativa (método de momentos)
q_bin <- 1-(n_bar/s_cua)
r_bin <- round(n_bar^2/(s_cua-n_bar),10)
q_bin;r_bin

###Newton

f_r<-function(r,n_bar= n_bar,n_k= n_k){
  as=0;al=0;sol=0
  for(k in 1:(length(n_k)-1)){
    for(m in 0:(k-1)){
      as<-(1/(m+r))+as
    }
    al<- (n_k[k+1]*as)+al
    as=0
  }
  sol<-(log(1+(n_bar/r))*Tcasos)-al
  return(sol)
}
# Funcion f'(r)-----------------
f_der<- function(r,n_bar,n_k){
  as=0;al=0;sol=0
  for(k in 1:(length(n_k)-1)){
    for(m in 0:(k-1)){
      as<-(1/(m+r)^2)+as
    }
    al<-(n_k[k+1]*as)+al
    as=0
  }
  sol <- (-n_bar/(r^2+(n_bar*r)))*Tcasos+al
  return(sol)
}
i=0
r<-r_bin
repeat{
  r1<-r-(f_r(r = r,n_bar = n_bar,n_k = n_k)/
           f_der(r = r,n_bar = n_bar,n_k = n_k))
  i=i+1
  if(abs(r1-r)<eps){break}
  r=r1
  r1=0
}
r1
q<-n_bar/(n_bar+r1)
q

# Familia Hofmann------------------------
# Momentos-------------------------------
q_t <- n_bar
k_t <- (s_cua-n_bar)/n_bar
m_3 <-sum((k-n_bar)^3*freqrel)
c_t <- (m_3-s_cua)/(n_bar*k_t)-k_t-2
a_t <- k_t/c_t
q_t;k_t;m_3;c_t;a_t
# Distribución de Hofmann
Lamb<- q_t*(1+c_t)^(-a_t)
p0<- exp(-(q_t/c_t)*((((1+c_t)^(1-a_t)-1) )/(1-a_t)))
Hofmann <- function(p_0,n,a,q,c){
  p1=0;pa=0
  valores<-numeric(n+1)
  valores[1]<-p_0
  for(i in 1:n){
    for(k in 0:(i-1)){pa=
      ( pochhammer(a,k)/factorial(k)*((c^k)/((1+c)^(a+k)))*
          valores[i-k])+pa
    }
    p1=(q/(i))*pa
    valores[i+1]<-p1
    pa=0
  }
  return(valores)
}

####################### Estimación de probabilidades ##############################3

# Estimación de las probabilidades
Estpois <- dpois(x = k,lambda = lambda)
# Estimacion No. de casos con Poisson
estp<-round(Estpois*Tcasos,3)
estp
data.frame(estp)
sum(estp) # Casos Totales con Poisson
ajuspois1 <- c(estp[1:3],sum(estp[4:7]))
# Se agrupan los datos
n_ka<-c(n_k[1:3],sum(n_k[4:7]))
# Se agrupa de la misma manera los observados
Chi_p<-sum((n_ka-ajuspois1)^2/ajuspois1)
# Se hace la prueba Chi-cuadrado
Chi_cua(obs = n_ka,esp=ajuspois1)

# Estimacion de probabilidades con Binomial
# negativa por el metodo de los momentos
Estbinom1 <- dnbinom(x=k,size=r_bin,prob=(1-q_bin))
# Estimación número de casos con binomial negativa
estbinn1 <- round(Estbinom1*Tcasos,3)
data.frame(estbinn1)
# Casos Totales con la estimación binomial negativa
sum(estbinn1)
ajusbinn11 <- c(estbinn1[1:4],sum(estbinn1[5:7]))
n_ka<-c(n_k[1:4],sum(n_k[5:7]))
# Se agrupa de la misma manera los observados
Chi_binn1<-sum((n_ka-ajusbinn11)^2/ajusbinn11)
# Se hace la prueba Chi-cuadrado
Chi_cua(obs = n_ka,esp=ajusbinn11)

# Estimacion de probabilidades con Binomial
# negativa por el metodo MV
Estbinom2 <- dnbinom(x = k,size = r1,prob = (1-q))
# Estimacion No. de casos con binomial negativa, por MV
estbinn2 <- round(Estbinom2*Tcasos,3)
data.frame(estbinn2)
# Casos Totales con la estimacion binomial negativa por MV
sum(estbinn2)
ajusbinn21 <- c(estbinn2[1:4],sum(estbinn2[5:7]))
# Se agrupa de la misma manera los observados
n_ka<-c(n_k[1:4],sum(n_k[5:7]))
Chi_binn2<-sum((n_ka-ajusbinn21)^2/ajusbinn21)
# Se hace la prueba Chi-cuadrado
Chi_cua(obs = n_ka,esp=ajusbinn21)


#CON HOFMANN

Est_hof<-Hofmann(p_0 = p0,n = 6,a = a_t,q = q_t,c = c_t)
est_hof <- round(Est_hof*Tcasos,3)
est_hof
sum(est_hof)
ajushof <- c(est_hof[1:4],sum(est_hof[5:7]))
n_ka<-c(n_k[1:4],sum(n_k[5:7]))
Chi_hof<-sum((n_ka-ajushof)^2/ajushof)
# Se hace la prueba Chi-cuadrado
Chi_cua(obs = n_ka,esp=ajushof)


### Salida Final
test=c("test",".",round(Chi_p,3),round(Chi_binn1,3),
       round(Chi_binn2,3),round(Chi_hof,3))
salida=cbind(k,n_k,estp,estbinn1,estbinn2,est_hof)
salida=rbind(salida,test)
salida
\end{verbatim}  

\subsection*{Cartera C15}
\begin{verbatim}
##########################CARTERA C15##############################3

install.packages("orthopolynom")
install.packages("gtools")
library(orthopolynom)
library(gtools)
### Numero de siniestros
k<-c(0:8)
n_k<-c(371481,26784,2118,174,18,2,2,0,0)
Tcasos<-sum(n_k)
freqrel<-(n_k/Tcasos)
eps=0.000001;
n_bar <- sum(k*n_k)/Tcasos
sum(k*n_k)
(sum(k^2*n_k)/Tcasos)
(n_bar^2)
s_cua <- (sum(k^2*n_k)/Tcasos)-(n_bar^2)
n_bar;s_cua

### Prueba Chicuadrado
Chi_cua<- function(obs, esp,alpha=0.05,m=8,gl=2){
  chi<-sum((obs-esp)^2/esp)
  vchi<-qchisq(1-alpha,df = gl )
  if(chi<vchi){
    return(list("No hay evidencia para rechazar H_0",
                chi,"Valor critico"=vchi))
  }
  if(chi>=vchi){
    return(list("Existe evidencia para rechazar H_0",
                chi, "Valor critico"=vchi))
  }
}
### intervalo de confianza para el índice de dispersión
d <- s_cua/n_bar #índice de dispersión muestral

d
z <- qnorm(0.975, mean = 0, sd = 1)
z
der <- d + z * d * sqrt((1 / Tcasos) * (2 + ((d - 1) * (3 * d - 1)) / s_cua))
izq <- d - z * d * sqrt((1 / Tcasos) * (2 + ((d - 1) * (3 * d - 1)) / s_cua))

izq;der

# Estimación de parámetros

# Distribucion Poisson
lambda<-n_bar
lambda

# Binomial Negativa (método de momentos)
q_bin <- 1-(n_bar/s_cua)
r_bin <- round(n_bar^2/(s_cua-n_bar),10)
q_bin;r_bin

###Newton

f_r<-function(r,n_bar= n_bar,n_k= n_k){
  as=0;al=0;sol=0
  for(k in 1:(length(n_k)-1)){
    for(m in 0:(k-1)){
      as<-(1/(m+r))+as
    }
    al<- (n_k[k+1]*as)+al
    as=0
  }
  sol<-(log(1+(n_bar/r))*Tcasos)-al
  return(sol)
}
# Funcion f'(r)-----------------
f_der<- function(r,n_bar,n_k){
  as=0;al=0;sol=0
  for(k in 1:(length(n_k)-1)){
    for(m in 0:(k-1)){
      as<-(1/(m+r)^2)+as
    }
    al<-(n_k[k+1]*as)+al
    as=0
  }
  sol <- (-n_bar/(r^2+(n_bar*r)))*Tcasos+al
  return(sol)
}
i=0
r<-r_bin
repeat{
  r1<-r-(f_r(r = r,n_bar = n_bar,n_k = n_k)/
           f_der(r = r,n_bar = n_bar,n_k = n_k))
  i=i+1
  if(abs(r1-r)<eps){break}
  r=r1
  r1=0
}
r1
q<-n_bar/(n_bar+r1)
q

# Familia Hofmann------------------------
# Momentos-------------------------------
q_t <- n_bar
k_t <- (s_cua-n_bar)/n_bar
m_3 <-sum((k-n_bar)^3*freqrel)
c_t <- (m_3-s_cua)/(n_bar*k_t)-k_t-2
a_t <- k_t/c_t
q_t;k_t;m_3;c_t;a_t
# Distribución de Hofmann
Lamb<- q_t*(1+c_t)^(-a_t)
p0<- exp(-(q_t/c_t)*((((1+c_t)^(1-a_t)-1) )/(1-a_t)))
Hofmann <- function(p_0,n,a,q,c){
  p1=0;pa=0
  valores<-numeric(n+1)
  valores[1]<-p_0
  for(i in 1:n){
    for(k in 0:(i-1)){pa=
      ( pochhammer(a,k)/factorial(k)*((c^k)/((1+c)^(a+k)))*
          valores[i-k])+pa
    }
    p1=(q/(i))*pa
    valores[i+1]<-p1
    pa=0
  }
  return(valores)
}

####################### Estimación de probabilidades ##############################3

# Estimación de las probabilidades
Estpois <- dpois(x = k,lambda = lambda)
# Estimacion No. de casos con Poisson
estp<-round(Estpois*Tcasos,3)
estp
data.frame(estp)
sum(estp) # Casos Totales con Poisson
ajuspois1 <- c(estp[1:3],sum(estp[4:9]))
# Se agrupan los datos
n_ka<-c(n_k[1:3],sum(n_k[4:9]))
# Se agrupa de la misma manera los observados
Chi_p<-sum((n_ka-ajuspois1)^2/ajuspois1)
# Se hace la prueba Chi-cuadrado
Chi_cua(obs = n_ka,esp=ajuspois1)

# Estimacion de probabilidades con Binomial
# negativa por el metodo de los momentos
Estbinom1 <- dnbinom(x=k,size=r_bin,prob=(1-q_bin))
# Estimación número de casos con binomial negativa
estbinn1 <- round(Estbinom1*Tcasos,3)
data.frame(estbinn1)
# Casos Totales con la estimación binomial negativa
sum(estbinn1)
ajusbinn11 <- c(estbinn1[1:4],sum(estbinn1[5:9]))
n_ka<-c(n_k[1:4],sum(n_k[5:9]))
# Se agrupa de la misma manera los observados
Chi_binn1<-sum((n_ka-ajusbinn11)^2/ajusbinn11)
# Se hace la prueba Chi-cuadrado
Chi_cua(obs = n_ka,esp=ajusbinn11)

# Estimacion de probabilidades con Binomial
# negativa por el metodo MV
Estbinom2 <- dnbinom(x = k,size = r1,prob = (1-q))
# Estimacion No. de casos con binomial negativa, por MV
estbinn2 <- round(Estbinom2*Tcasos,3)
data.frame(estbinn2)
# Casos Totales con la estimacion binomial negativa por MV
sum(estbinn2)
ajusbinn21 <- c(estbinn2[1:4],sum(estbinn2[5:9]))
# Se agrupa de la misma manera los observados
n_ka<-c(n_k[1:4],sum(n_k[5:9]))
Chi_binn2<-sum((n_ka-ajusbinn21)^2/ajusbinn21)
# Se hace la prueba Chi-cuadrado
Chi_cua(obs = n_ka,esp=ajusbinn21)


#CON HOFMANN

Est_hof<-Hofmann(p_0 = p0,n = 8,a = a_t,q = q_t,c = c_t)
est_hof <- round(Est_hof*Tcasos,3)
data.frame(est_hof)
sum(est_hof)
ajushof <- c(est_hof[1:5],sum(est_hof[6:9]))
n_ka<-c(n_k[1:5],sum(n_k[6:9]))
Chi_hof<-sum((n_ka-ajushof)^2/ajushof)
# Se hace la prueba Chi-cuadrado
Chi_cua(obs = n_ka,esp=ajushof)


### Salida Final
test=c("test",".",round(Chi_p,3),round(Chi_binn1,3),
       round(Chi_binn2,3),round(Chi_hof,3))
salida=cbind(k,n_k,estp,estbinn1,estbinn2,est_hof)
salida=rbind(salida,test)
salida
